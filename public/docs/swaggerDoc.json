{
  "swagger": "2.0",
  "info": {
    "description": "Making company travel and accomodation easy and convenient.",
    "version": "1.0.0",
    "title": "Barefoot Nomad",
    "contact": {
      "email": "cyclops@andela.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "scheme": "bearer",
      "description": "You are required to pass the JWT token received upon signup and signin in the headers to access secured endpoint, required input format: \"Bearer \\<token\\>\"",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "Landing",
      "description": "Barefoot Nomad landing"
    },
    {
      "name": "User",
      "description": "Registers and login users"
    },
    {
      "name": "Trip",
      "description": "Users travel request, information and history"
    },
    {
      "name": "Office",
      "description": "Company Office Locations"
    },
    {
      "name": "Comment",
      "description": "Comments on trip request"
    },
    {
      "name": "Accommodation",
      "description": "Accommodations for Barefoot Nomad"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/": {
      "get": {
        "tags": ["Landing"],
        "summary": "See landing page",
        "description": "Returns a map of status codes to quantities",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Landing"
            }
          },
          "400": {
            "description": "Invalid"
          },
          "security": [
            {
              "api_key": []
            }
          ]
        }
      }
    },
    "/api/v1/auth/signin": {
      "post": {
        "tags": ["User"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "signin",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "johndoe@company.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Success",
              "example": {
                "status": "success",
                "data": {}
              }
            }
          },
          "400": {
            "description": "User not found and token error",
            "schema": {
              "example": {
                "application/json; charset=utf-8": {
                  "status": "Error",
                  "errors": "User not found"
                }
              }
            }
          },
          "401": {
            "description": "User authorization error",
            "schema": {
              "example": {
                "application/json; charset=utf-8": {
                  "status": 401,
                  "message": "Authorization failed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "summary": "user signup",
        "tags": ["User"],
        "operationId": "SignupPost",
        "deprecated": false,
        "produces": ["application/json"],
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "formData",
            "enum": ["male", "female"],
            "type": "string"
          },
          {
            "name": "date_of_birth",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "designation",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "residential_address",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "title": "Success",
              "example": {
                "status": "success",
                "message": "Account successfully created"
              }
            },
            "description": "",
            "headers": {}
          },
          "422": {
            "schema": {
              "title": "Success",
              "example": {
                "status": "error",
                "error": {
                  "first_name": "first name is required",
                  "last_name": "last name is required",
                  "email": "email is not valid",
                  "password": "password should contain at least one Uppercase letter, one lowercase letter, and at least one digit"
                }
              }
            },
            "description": "",
            "headers": {}
          },
          "409": {
            "schema": {
              "title": "Success",
              "example": {
                "status": "error",
                "error": "User {user_email} already exists"
              }
            },
            "description": "",
            "headers": {}
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "description": "Endpoint to enable users view profile details",
        "summary": "View profile details",
        "tags": ["User"],
        "operationId": "UsersGet",
        "deprecated": false,
        "produces": ["application/json"],
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Success",
              "example": {
                "status": "success",
                "data": {}
              }
            }
          },
          "400": {
            "description": "User not found and token error",
            "schema": {
              "example": {
                "application/json; charset=utf-8": {
                  "status": "Error",
                  "errors": "User not found"
                }
              }
            }
          },
          "401": {
            "description": "User authorization error",
            "schema": {
              "example": {
                "application/json; charset=utf-8": {
                  "status": 401,
                  "message": "Authorization failed"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/forgotPassword": {
      "post": {
        "tags": ["User"],
        "summary": "Sends a reset link to the user",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "for password reset link",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid email supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/auth/resetPassword/:uuid/:token": {
      "put": {
        "tags": ["User"],
        "summary": "Send new password",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "password",
            "in": "path",
            "description": "that need to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid password supplied"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/office": {
      "get": {
        "tags": ["Office"],
        "summary": "Get company's office locations",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "address": {
                  "type": "string",
                  "example": "9 shagamnu"
                },
                "state": {
                  "type": "string",
                  "example": "Vinci"
                },
                "city": {
                  "type": "string",
                  "example": "bangkok"
                },
                "country": {
                  "type": "string",
                  "example": "spain"
                },
                "created_at": {
                  "type": "date",
                  "example": ""
                },
                "updated_at": {
                  "type": "date",
                  "example": ""
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/trips": {
      "post": {
        "tags": ["Trip"],
        "summary": "Allow users to create a return trip",
        "description": "",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "address": {
                  "type": "string",
                  "example": "9 shagamnu"
                },
                "state": {
                  "type": "string",
                  "example": "Vinci"
                },
                "city": {
                  "type": "string",
                  "example": "bangkok"
                },
                "country": {
                  "type": "string",
                  "example": "spain"
                },
                "created_at": {
                  "type": "date",
                  "example": ""
                },
                "updated_at": {
                  "type": "date",
                  "example": ""
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["Trip"],
        "summary": "Shows users trip requests records with status",
        "description": "",
        "operationId": "ReturnsAllTrips",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "status": "success",
            "type": "object"
          }
        }
      }
    },
    "/api/v1/comment/trips": {
      "post": {
        "tags": ["Comment"],
        "summary": "Allow users to comment on a trip request",
        "description": "",
        "operationId": "CommentOnTripRequest",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "comment details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "trip_request_uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "message": {
                  "type": "string",
                  "example": "Please approve my trip request"
                }
              }
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Comment Created Successfully",
            "name": "type",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "user_uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "trip_request_uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "message": {
                  "type": "string",
                  "example": "Please approve my trip request"
                },
                "createdAt": {
                  "type": "date"
                },
                "updatedAt": {
                  "type": "date"
                }
              }
            }
          },
          "404": {
            "description": "trip request details not found"
          },
          "403": {
            "description": "A user is forbidden to comment on a trip request"
          }
        }
      }
    },
    "api/v1/comment/trips/:commentUuid": {
      "put": {
        "tags": ["Comment"],
        "summary": "Update the comment on a trip request",
        "description": "",
        "consumes": "application/json",
        "operationId": "UpdatePropertyPrice",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commentUuid",
            "in": "path",
            "description": "uuid of comment to update",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "comment that has been updated",
            "name": "type",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "user_uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "trip_request_uuid": {
                  "type": "string",
                  "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
                },
                "message": {
                  "type": "string",
                  "example": "Please approve my trip request"
                },
                "createdAt": {
                  "type": "date"
                },
                "updatedAt": {
                  "type": "date"
                }
              }
            }
          }
        }
      }
    },
    "api/v1/comment/trips/:uuid": {
      "delete": {
        "tags": ["Comment"],
        "summary": "Delete a user's comment",
        "description": "Deletes a user's comment",
        "consumes": "application/json",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid of comment to delete",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Comment deleted successful",
            "name": "type"
          }
        }
      }
    },
    "/api/v1/accommodation": {
      "post": {
        "tags": ["Accommodation"],
        "summary": "Allow Suppliers to create accommodation",
        "description": "",
        "operationId": "CreateAnAccommodation",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "body",
            "description": "details of the accommodation",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/CreateAnAccommodation"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Accomodation that was created",
            "status": "success",
            "type": "object"
          }
        }
      },
      "get": {
        "tags": ["Accommodation"],
        "summary": "get All Accommodations",
        "description": "",
        "operationId": "ReturnsAlAccommodations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Comment deleted successful",
            "name": "type"
          }
        }
      }
    },
    "/api/v1/accommodation/:accommodationUuid": {
      "get": {
        "tags": ["Accommodation"],
        "summary": "get A Particular Accommodations",
        "description": "",
        "operationId": "ReturnsAParticularAccommodations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "accommodationUuid",
            "in": "path",
            "description": "get details of the accommodation plus the rooms",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "status": "success",
            "type": "object"
          }
        }
      }
    },
    "definitions": {
      "Landing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@company.com"
          },
          "password": {
            "type": "string"
          },
          "token": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "CreateReturnTripRequest": {
        "type": "object",
        "required": [
          "request_type",
          "trip_plan",
          "leaving_from",
          "return_date",
          "travel_date",
          "destination"
        ],
        "properties": {
          "request_type": {
            "type": "string",
            "example": "returnTrip"
          },
          "trip_plan": {
            "type": "string",
            "example": "singleCity"
          },
          "leaving_from": {
            "type": "uuid",
            "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
          },
          "return_date": {
            "type": "date",
            "example": "08-22-2018"
          },
          "travel_date": {
            "type": "date",
            "example": "09-22-2019"
          },
          "destination": {
            "type": "uuid",
            "example": "95ccd25d-2524-4b95-a441-8e2643c4c071"
          }
        },
        "xml": {
          "name": "CreateTripRequest"
        }
      },
      "CreateAnAccommodation": {
        "type": "object",
        "required": [
          "name",
          "description",
          "services",
          "image_url",
          "amenities"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Shegson House"
          },
          "description": {
            "type": "string",
            "example": "I want to create this accommodation"
          },
          "services": {
            "type": "array",
            "example": "95ccd25d-2524-4b95-a441-8e2643c4c075"
          },
          "amenities": {
            "type": "array",
            "example": "08-22-2018"
          },
          "image_url": {
            "type": "date",
            "example": "https://res.cloudinary/Blessing.png"
          }
        },
        "xml": {
          "name": "CreateAnAccommodation"
        }
      }
    }
  }
}
